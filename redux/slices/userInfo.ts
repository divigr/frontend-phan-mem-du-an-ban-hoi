import { createSlice, PayloadAction } from '@reduxjs/toolkit'

// Define the User interface
interface User {
  id: string
  name: string
  username: string
  email: string
  sdt: string // Phone number
  status: string
  khu_vuc_quan_ly: string // Area Management
}

// Define the initial state with an array of users
interface UserState {
  users: User[]
}

const initialState: UserState = {
  users: [],
}

// Create the user slice
const userSlice = createSlice({
  name: 'user',
  initialState,
  reducers: {
    // Action to add a new user
    addUser: (state, action: PayloadAction<User>) => {
      state.users.push(action.payload)
    },

    // Action to delete a user by ID
    deleteUser: (state, action: PayloadAction<string>) => {
      state.users = state.users.filter((user) => user.id !== action.payload)
    },

    // Action to update user data
    updateUser: (state, action: PayloadAction<User>) => {
      const index = state.users.findIndex((user) => user.id === action.payload.id)
      if (index !== -1) {
        state.users[index] = action.payload
      }
    },
  },
})

// Export the actions generated by createSlice
export const { addUser, deleteUser, updateUser } = userSlice.actions

// Export the reducer to be used in the store
export default userSlice.reducer
